A = data.frame()
A.rbindlist(rep(0, times=10))
rbind(A,rep(0, times=10))
rbind(A,rep(0, times=10))
A = rbind(A,rep(0, times=10))
A = rbind(A,rep(0, times=10))
A
A = data.frame(0)
A
X0 = rep('ABC', 10)
X0
rbind(A,X0)
X0 = rep('ABC', 10,1)
X0 = rep('ABC', 1,10)
X0
bind_rows(A,X0)
bind_rows(A)
rbind_list(A,X0)
View(nb_of_event_per_patient)
for (x in c(1:length(patients$patid)))
year_of_birth = patients$yob[which(patients$patid=codes$patid[x])], times = nb_of_event_per_patient$Freq[x]))
for (x in c(1:length(patients$patid)))
year_of_birth = patients$yob[which(patients$patid==codes$patid[x])], times = nb_of_event_per_patient$Freq[x]))
for (x in c(1:length(patients$patid)))
year_of_birth = patients$yob[which(patients$patid==codes$patid[x])]
year_of_birth = patients$yob[which(patients$patid==codes$patid[x],1)]
which(patients$patid==codes$patid[x])
x
codes$patid[x]
View(year_of_birth)
View(nb_of_event_per_patient)
which(patients$patid==codes$patid[x])
patients$patid
codes$patid[x]
which(patients$patid[1:8212]==codes$patid[x])
which(patients$patid[1:8213]==codes$patid[x])
patients$patid[1:8213]
patients[1:8212]$patid
patients$patid
patients$patid[x]
# Count codes before and after splitting point.
by_code <- group_by(codes.2014, patid, medcode)
codes.2014 <- as.data.frame(summarize(
by_code,
count=n()
))
View(codes.2014)
patients$patid[0???]
patients$patid['0???']
patients['0???']
patients$patid == '0???'
patients$patid == 0???
dsf\gfg
codes$mdecode
codes$medcode
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$Freq)
min(which(nb_of_event_per_patient_cumsum > 5000))
nb_of_event_per_patient_cumsum
min(which(nb_of_event_per_patient_cumsum > 1024))
min(which(nb_of_event_per_patient_cumsum >= 1024))
min(which(nb_of_event_per_patient_cumsum >= 1025))
min(which(nb_of_event_per_patient_cumsum >= 1023))
x <- vector(mode="numeric", length=nb_events)
# Number of events
nb_events = length(patients$patid)
x <- vector(mode="numeric", length=nb_events)
for (x in c(1:nb_events))
age_at_visit_in_days[x] = patients$yob[which(nb_of_event_per_patient_cumsum >= x)]
age_at_visit_in_days
age_at_visit_in_days <- vector(mode="numeric", length=nb_events)
for (x in c(1:nb_events))
age_at_visit_in_days[x] = patients$yob[which(nb_of_event_per_patient_cumsum >= x)]
x
nb_events
lenght(age_at_visit_in_days)
length(age_at_visit_in_days)
which(nb_of_event_per_patient_cumsum >= x)
max(nb_of_event_per_patient_cumsum)
# Number of events
nb_events = length(codes$patid)
nb_events
max(nb_of_event_per_patient_cumsum)
x = 7479791
which(nb_of_event_per_patient_cumsum >= x)
patients$yob[which(nb_of_event_per_patient_cumsum >= x)]
mode(1999-12-12)
x = 1
age_at_visit_in_days <- vector(mode="numeric", length=nb_events)
age_at_visit_in_days[x] = patients$yob[which(nb_of_event_per_patient_cumsum >= x)]
patients$yob[which(nb_of_event_per_patient_cumsum >= x)]
which(nb_of_event_per_patient_cumsum >= x)
min(which(nb_of_event_per_patient_cumsum >= x))
patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]
age_at_visit_in_days[x] = patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]
age_at_visit_in_days =list(length = nb_events)
View(age_at_visit_in_days)
age_at_visit_in_days =list()
age_at_visit_in_days[x] = patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]
View(age_at_visit_in_days)
patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]
patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))][1]
A = patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]
A
A[1]
as.character(A)
as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
age_at_visit_in_days[x] = as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
View(age_at_visit_in_days)
age_at_visit_in_days =list()
for (x in c(1:10))
age_at_visit_in_days[x] = as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
View(age_at_visit_in_days)
age_at_visit_in_days =list()
for (x in c(1:1000))
age_at_visit_in_days[x] = as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
View(age_at_visit_in_days)
View(age_at_visit_in_days)
age_at_visit_in_days
age_at_visit_in_days[1]
age_at_visit_in_days[1][1]
age_at_visit_in_days[1,1]
age_at_visit_in_days[2]
age_at_visit_in_days =list()
x=1
age_at_visit_in_days.append(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]))
list.append(age_at_visit_in_days.append, as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]))
age_at_visit_in_days[[x]] = as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
View(age_at_visit_in_days)
age_at_visit_in_days[1]
age_at_visit_in_days[[x]] <- as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
View(age_at_visit_in_days)
age_at_visit_in_days[1]
age_at_visit_in_days[[x]] <- c(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]))
View(age_at_visit_in_days)
age_at_visit_in_days[1]
age_at_visit_in_days =data.frame()
for (x in c(1:1000))
age_at_visit_in_days[x] <- as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
age_at_visit_in_days =data.frame(length = nb_events)
for (x in c(1:1000))
age_at_visit_in_days[x] <- as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
View(age_at_visit_in_days)
for (x in c(1:1000))
codes$age_at_visit_in_days[x] <- format(codes$event date - as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), '%d')
for (x in c(1:1000))
codes$age_at_visit_in_days[x] <- format(codes$eventdate - as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), '%d')
for (x in c(1:1000))
codes$age_at_visit_in_days[x] <- format(codes$eventdate[x] - as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), '%d')
codes$eventdate[x]
as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
codes$eventdate[x] - as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))])
mode(codes$eventdate[x])
as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format= "%Y-%m-%d")
A = as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format= "%Y-%m-%d")
codes$eventdate[x] - A
for (x in c(1:1000))
codes$age_at_visit_in_days[x] <- as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]) - as.Date(codes$eventdate[x], format= "%Y-%m-%d")
for (x in c(1:1000))
codes$age_at_visit_in_days[x] <- as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d") - codes$eventdate[x]
View(codes)
for (x in c(1:10))
codes$age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(codes)
pb <- txtProgressBar(min = 0, max = nb_events, style = 3)
for (x in c(1:nb_events))
codes$age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
for (x in c(1:nb_events))
codes$age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
for (x in c(1:nb_events))
codes$age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(year_of_birth)
x=1
codes$eventdate[x]
as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
for (x in c(1:1000))
codes$age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(codes)
age_at_visit_in_days = list()
for (x in c(1:1000))
age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(age_at_visit_in_days)
age_at_visit_in_days[1]
age_at_visit_in_days[2]
age_at_visit_in_days[1:10]
codes$age_at_visit = age_at_visit_in_days
for (x in c(1:10000))
age_at_visit_in_days[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(age_at_visit_in_days)
codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
Sys.sleep(0.1)
A = codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
A
mode(A)
format(A)
age_at_visit_in_days[1] = format(A)
View(age_at_visit_in_days)
mode(format(A))
mode(A)
as.numeric(A, unit="days")
mode(as.numeric(A, unit="days"))
age_at_visit_in_days = list()
for (x in c(1:10000))
age_at_visit_in_days[x] <- as.numeric(codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d"), unit="days")
View(age_at_visit_in_days)
age_at_visit_in_days[1]
age_at_visit = list()
for (x in c(1:nb_events))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
code$age_at_visit_in_days = age_at_visit
codes$age_at_visit_in_days = age_at_visit
View(codes)
# Filter years according to cutting point.
codes.2014 = filter(codes, year == 2014)
codes = filter(codes, year < 2014)
View(codes)
# Filter years according to cutting point.
codes.2014 = filter(codes, codes$year == 2014)
codes = filter(codes, codes$year < 2014)
rm age_at_visit_in_days
rm(age_at_visit_in_days)
# Count codes before and after splitting point.
by_code <- group_by(codes.2014, patid, medcode)
library("dplyr")
# Count codes before and after splitting point.
by_code <- group_by(codes.2014, patid, medcode)
# Filter years according to cutting point.
codes.2014 = filter(codes, year == 2014)
rm(list=ls())
library("dplyr")
rm(list=ls())
library("dplyr")
# Path so save the data and metadata
REPO_PATH = '/Users/camille.vanassel/Data Intelligence/Deep Patient '
PATH = ''
METADATA_PATH = paste(REPO_PATH, 'data', sep='/')
# Load data
codes = as.data.frame(
read.csv(paste(METADATA_PATH, 'Medcode.csv', sep='/'))
)
patients = as.data.frame(
read.csv(paste(METADATA_PATH, 'Patients.csv', sep='/'))
)
View(codes)
# Fetch descriptors
all.codes = unique(codes$medcode)
all.patients = unique(codes$patid)
all.codes
codes = mutate(codes, eventdate= as.Date(eventdate, format= "%Y-%m-%d"))
codes$year <- format(codes$eventdate, "%Y")
View(codes)
# Number of events
nb_events = length(codes$patid)
# Compute the age at event date, in days
nb_of_event_per_patient = rle(codes$patid)
hekp(rle)
help(rle)
mode(codes$patid)
isatomic(as.numeric(codes$patid))
is.atomic(as.numeric(codes$patid))
# Compute the age at event date, in days
nb_of_event_per_patient = rle(as.numeric(codes$patid))
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$Freq)
age_at_visit = list()
for (x in c(1:nb_events))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
codes$age_at_visit_in_days = age_at_visit
warnings()
View(age_at_visit)
codes$eventdate[x]
as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(nb_of_event_per_patient)
View(nb_of_event_per_patient)
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$values)
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$lengths)
age_at_visit = list()
for (x in c(1:10))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
View(age_at_visit)
age_at_visit = list()
for (x in c(1:10))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
age_at_visit = list()
for (x in c(1:nb_events))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
codes$age_at_visit_in_days = age_at_visit
View(codes)
# Filter years according to cutting point.
codes.2014 = filter(codes, year == 2014)
View(codes.2014)
codes = filter(codes, year < 2014)
# Count codes before and after splitting point.
by_code <- group_by(codes.2014, patid, medcode)
View(by_code)
codes.2014 <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
by_code <- group_by(codes, patient_id, code)
codes <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
by_code <- group_by(codes, patid, medcode)
codes <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
View(by_code)
View(codes)
View(by_code)
rm(list=ls())
library("dplyr")
# Path so save the data and metadata
REPO_PATH = '/Users/camille.vanassel/Data Intelligence/Deep Patient '
PATH = ''
METADATA_PATH = paste(REPO_PATH, 'data', sep='/')
# Load data
codes = as.data.frame(
read.csv(paste(METADATA_PATH, 'Medcode.csv', sep='/'))
)
patients = as.data.frame(
read.csv(paste(METADATA_PATH, 'Patients.csv', sep='/'))
)
# Fetch descriptors
all.codes = unique(codes$medcode)
all.patients = unique(codes$patid)
codes = mutate(codes, eventdate= as.Date(eventdate, format= "%Y-%m-%d"))
codes$year <- format(codes$eventdate, "%Y")
# Number of events
nb_events = length(codes$patid)
View(codes)
# Compute the age at event date, in days
nb_of_event_per_patient = rle(as.numeric(codes$patid))
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$lengths)
age_at_visit = list()
for (x in c(1:nb_events))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
codes$age_at_visit_in_days = age_at_visit
# Filter years according to cutting point.
codes.2014 = filter(codes, year == 2014)
codes = filter(codes, year < 2014)
# Count codes before and after splitting point.
by_code <- group_by(codes.2014, patid, medcode)
codes.2014 <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
View(codes.2014)
View(codes)
by_code <- group_by(codes, patid, medcode)
codes <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
View(codes)
warnings()
rm(list=ls())
library("dplyr")
# Path so save the data and metadata
REPO_PATH = '/Users/camille.vanassel/Data Intelligence/Deep Patient '
PATH = ''
METADATA_PATH = paste(REPO_PATH, 'data', sep='/')
# Load data
codes = as.data.frame(
read.csv(paste(METADATA_PATH, 'Medcode.csv', sep='/'))
)
patients = as.data.frame(
read.csv(paste(METADATA_PATH, 'Patients.csv', sep='/'))
)
# Fetch descriptors
all.codes = unique(codes$medcode)
all.patients = unique(codes$patid)
codes = mutate(codes, eventdate= as.Date(eventdate, format= "%Y-%m-%d"))
codes$year <- format(codes$eventdate, "%Y")
# Number of events
nb_events = length(codes$patid)
View(codes)
# Compute the age at event date, in days
nb_of_event_per_patient = rle(as.numeric(codes$patid))
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$lengths)
age_at_visit = list()
for (x in c(1:nb_events))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
codes$age_at_visit_in_days = as.numerical(age_at_visit)
codes$age_at_visit_in_days = as.numeric(age_at_visit)
View(codes)
# Filter years according to cutting point.
codes.2014 = filter(codes, year == 2014)
codes = filter(codes, year < 2014)
# Count codes before and after splitting point.
by_code <- group_by(codes.2014, patid, medcode)
codes.2014 <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
View(codes.2014)
by_code <- group_by(codes, patid, medcode)
codes <- as.data.frame(summarize(
by_code,
count=n(),
age=mean(age_at_visit_in_days, na.rm=T)
))
View(codes)
# Remove patients with too few records before 2014
ids <-codes$patid
totalCounts <- data.frame(count=rep(0, length(ids)))
View(totalCounts)
rownames(totalCounts) <- ids
# Remove patients with too few records before 2014
ids <- union(codes$patient_id)
# Remove patients with too few records before 2014
ids <- unique(codes$patient_id)
# Remove patients with too few records before 2014
ids <- unique(codes$patid)
totalCounts <- data.frame(count=rep(0, length(ids)))
rownames(totalCounts) <- ids
ids
by_patient <- group_by(codes, patid)
counts <- as.data.frame(summarize(by_patient, count=n()))
View(counts)
totalCounts[as.character(counts$patid), "count"] =
totalCounts[as.character(counts$patid), "count"] + counts[, "count"]
View(totalCounts)
# Patient IDs to keep
ids <- ids[totalCounts$count >= 5]
codes.2014 <- filter(codes.2014, patid %in% ids, !is.null(code))
codes.2014 <- filter(codes.2014, patid %in% ids, !is.null(medcode))
# Remove codes appearing in less than 5 patients or more than 80% of patients.
by_code <- group_by(codes, medcode)
counts <- as.data.frame(summarize(by_code, count=n()))
View(counts)
codes.to.keep <- filter(counts, count >= 5,
count < 0.8 * length(unique(codes$patid)))$medcode
codes.to.keep[1]
codes.to.keep[2]
# Sample test patients, and hold them back from training set
test.patients = unique(codes.2014$patid)
test.patients[1]
test.patients[2]
test.patients = test.patients[test.patients %in%
rownames(filter(totalCounts, count >= 10))]
test.patients[1]
test.patients = base::sample(unique(codes.2014$patient_id), size=4000)
# Sample test patients, and hold them back from training set
test.patients = unique(codes.2014$patid)
View(counts)
View(totalCounts)
View(counts)
View(totalCounts)
help filter
help(filter)
View(counts)
View(totalCounts)
filter(totalCounts, count >= 10)
rownames(filter(totalCounts, count >= 10)
)
test.patients
test.patients %in% rownames(filter(totalCounts, count >= 10))
test.patients = test.patients[rownames(filter(totalCounts, count >= 10))]
test.patients = base::sample(unique(codes.2014$patid), size=4000)
# Hold back test patients from source task training set
codes = filter(codes, patid %in% ids, !is.null(code),
code %in% codes.to.keep,
!(patid %in% test.patients))
# Hold back test patients from source task training set
codes = filter(codes, patid %in% ids, !is.null(medcode),
medcode %in% codes.to.keep,
!(patid %in% test.patients))
View(codes)
rm(list=ls())
library("dplyr")
# Path so save the data and metadata
REPO_PATH = '/Users/camille.vanassel/Data Intelligence/Deep Patient '
PATH = ''
METADATA_PATH = paste(REPO_PATH, 'data', sep='/')
# Load data
codes = as.data.frame(
read.csv(paste(METADATA_PATH, 'Medcode.csv', sep='/'))
)
patients = as.data.frame(
read.csv(paste(METADATA_PATH, 'Patients.csv', sep='/'))
)
orders = as.data.frame(
read.csv(paste(META_DATA_PATH, 'Orders.csv', spe='/'))
)
# Fetch descriptors
all.codes = unique(codes$medcode)
all.patients = unique(codes$patid)
codes = mutate(codes, eventdate= as.Date(eventdate, format= "%Y-%m-%d"))
codes$year <- format(codes$eventdate, "%Y")
orders.2014 = filter(orders, start_time_year >= 2014)
orders = filter(orders, start_time_year < 2014)
# Number of events
nb_events = length(codes$patid)
# Compute the age at event date, in days
nb_of_event_per_patient = rle(as.numeric(codes$patid))
nb_of_event_per_patient_cumsum = cumsum(nb_of_event_per_patient$lengths)
age_at_visit = list()
for (x in c(1:nb_events))
age_at_visit[x] <- codes$eventdate[x] - as.Date(as.character(patients$yob[min(which(nb_of_event_per_patient_cumsum >= x))]), format="%Y-%m-%d")
orders = as.data.frame(
read.csv(paste(METADATA_PATH, 'Orders.csv', spe='/'))
)
orders = as.data.frame(
read.csv(paste(METADATA_PATH, 'Orders.csv', sep='/'))
)
